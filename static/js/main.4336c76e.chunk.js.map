{"version":3,"sources":["components/Nav.js","components/Logo.js","components/SearchBar.js","components/ImageRecognized.js","components/Register.js","components/SignIn.js","containers/App.js","serviceWorker.js","index.js"],"names":["Nav","signInState","onSignOut","onRegister","isRegister","className","onClick","Logo","id","SearchBar","onSending","onTyping","searchField","type","onChange","value","ImageRecognized","imageUrl","answer","faceBox","alt","src","style","top","top_row","right","right_col","left","left_col","bottom","bottom_row","Register","onSubmit","action","method","accept-charset","for","name","SignIn","app","Clarifai","App","apiKey","event","setState","target","getFaceData","state","URL","models","predict","then","response","rawData","outputs","data","regions","concepts","boxData","faceBoxCalculate","region_info","bounding_box","console","log","predictName","imageBox","document","querySelector","offsetHeight","offsetWidth","isSignIn","onSignIn","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4336c76e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Nav = ({signInState, onSignOut, onRegister, isRegister}) => {\n    if(signInState===true){\n        return(\n            <div className=\"flex justify-end\">\n                <nav className=\"f5 code mh5 mv3 grow pointer\" onClick={onSignOut}>\n                {/* code font, max horizontal, max vertical,動畫長大 */}\n                    sign out\n                </nav>\n            </div>\n        )\n    } else if( isRegister===true){\n        return(\n            <div className=\"flex justify-end\">\n                <nav className=\"f5 code mh5 mv3 grow pointer\" onClick={onSignOut}>\n                {/* code font, max horizontal, max vertical,動畫長大 */}\n                    sign in\n                </nav>\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"flex justify-end\">\n                <nav className=\"f5 code mh5 mv3 grow pointer\" onClick={onSignOut}>\n                {/* code font, max horizontal, max vertical,動畫長大 */}\n                    sign in\n                </nav>\n                <nav className=\"f5 code mh5 mv3 grow pointer\" onClick={onRegister}>\n                {/* code font, max horizontal, max vertical,動畫長大 */}\n                    sign up\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Nav;","import React from 'react';\n\nconst Logo = () => {\n    return(\n        <div>\n            <div id=\"logo\" className=\"f6 tc ba bw1 br3 fl w-10 ml3 mt5 shadow-3 grow f2-l\">\n                logo brain\n            </div>\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\n\nconst SearchBar = ({onSending, onTyping, searchField}) => { \n    return(\n        <div className=\"mt5 tc flex flex-column\">\n            <h3>give it a try</h3>\n            <div className=\"flex justify-center items-center mh7\">\n            {/* margin hight */}\n                <input type=\"search\" className=\"fl w5 w-70-l f3-l f6\" onChange={onTyping} value={searchField}/>\n                <button className=\"fl w4 tc w-30-l f3-l f6\" onClick={onSending}>send</button>\n            </div>\n        </div>        \n    )\n}\n\nexport default SearchBar; ","import React from 'react';\nimport './ImageRecognize.css'\n\nconst ImageRecognized = ({imageUrl,answer,faceBox}) => {\n\n    if (answer!==''){\n        return(\n            <div className=\"mt1 tc flex flex-column justify-center\">\n            {/* margin top,text center */}\n                <div>\n                    <p>The celebrity is <span className=\"f3 dark-blue\">{answer}</span>.</p>\n                </div>\n                <div className=\"outer-box\">\n                    <div className=\"image-box\">\n                        <img id=\"celebrity-pic\" alt=\"celebrity\" src={imageUrl} />\n                        <div className=\"bounding-box\" style={{\n                            top:faceBox.top_row, \n                            right:faceBox.right_col, \n                            left:faceBox.left_col, \n                            bottom:faceBox.bottom_row}}>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"mt2 flex justify-center\">\n                <div className=\"image-box\">\n                    <img id=\"celebrity-pic\" alt=\"celebrity\" src={imageUrl} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ImageRecognized;","import React from 'react';\n\nconst Register = ({onSubmit}) => { \n    return(\n        <div className=\"ba bw1 mt5 mh7\">\n            <article className=\"pa4 black-80\">\n                <form action=\"sign-up_submit\" method=\"get\" accept-charset=\"utf-8\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"ph0 mh0 fw6 clip\">Sign Up</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw4 lh-copy f6\" for=\"email-address\">Email address</label>\n                            <input className=\"pa2 input-reset ba bg-transparent w-100 measure\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw4 lh-copy f6\" for=\"password\">Password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent\" type=\"password\" name=\"password\"  id=\"password\" />\n                        </div>\n                    </fieldset>\n                    <div className=\"mt3\">\n                        <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" onClick={onSubmit} value=\"Sign Up\" />\n                    </div>\n                </form>\n            </article>\n        </div>        \n    )\n}\n\nexport default Register; ","import React from 'react';\n\nconst SignIn = ({onSubmit}) => { \n    return(\n        <div className=\"ba bw1 mt5 mh7\">\n            <main className=\"pa4 black-80\">\n                <form className=\"measure center\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" onClick={onSubmit} value=\"Sign in\" />\n                    </div>\n                </form>\n            </main>\n        </div>        \n    )\n}\n\nexport default SignIn; ","import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Nav from '../components/Nav.js';\nimport Logo from '../components/Logo.js';\nimport SearchBar from '../components/SearchBar.js';\nimport ImageRecognized from '../components/ImageRecognized.js';\nimport 'tachyons';\nimport Register from '../components/Register.js';\nimport SignIn from '../components/SignIn.js';\n\nconst app = new Clarifai.App({\n  apiKey: 'a40220c771334acaafb67dd020f7f9d0'\n });\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      searchField:'',\n      URL:'https://samples.clarifai.com/celebrity.jpeg',\n      predictName:'',\n      isSignIn:false,\n      onRegister:false,\n      faceBox:{}\n    }\n  }\n \n  onTyping = (event) => {\n    this.setState({searchField:event.target.value});\n  }\n\n  onSending = () => {\n    this.getFaceData(this.state.searchField);\n    this.setState({URL:this.state.searchField});\n  }\n\n  getFaceData= (URL) => {\n    app.models.predict(\"e466caa0619f444ab97497640cefc4dc\",URL)\n    .then(response => {\n      const name = response.rawData.outputs[0].data.regions[0].data.concepts[0].name;\n      const boxData = this.faceBoxCalculate(response.rawData.outputs[0].data.regions[0].region_info.bounding_box);\n      console.log(boxData);\n      this.setState({faceBox:boxData})\n      this.setState({predictName:name});\n      this.setState({searchField:''});\n    });\n  }\n  \n  \n  faceBoxCalculate = (boxData)=>{\n    const imageBox = document.querySelector('#celebrity-pic');\n    let {top_row, left_col, bottom_row, right_col} = boxData;\n    boxData.top_row = imageBox.offsetHeight*top_row;\n    boxData.left_col = imageBox.offsetWidth*left_col;\n    boxData.bottom_row = imageBox.offsetHeight*(1-bottom_row);\n    boxData.right_col = imageBox.offsetWidth*(1-right_col);\n    return boxData;\n  }\n\n  onSubmit = () => {\n    this.setState({isSignIn:true});\n    this.setState({onRegister:false});\n  }\n\n  onSignIn=() => {\n    this.setState({isSignIn:true})\n  }\n\n  onSignOut=() =>{\n    this.setState({isSignIn:false})\n  }\n\n  onRegister=() => {\n    this.setState({onRegister:true})\n  }\n  \n  render (){\n    if(this.state.isSignIn===false){\n      if(this.state.onRegister===true){\n        return(\n          <div className=\"flex flex-column\">\n            <Nav \n              signInState={this.state.isSignIn} \n              onSignOut={this.onSignOut}  \n              onRegister={this.onRegister} \n              isRegister={this.state.onRegister}\n            />\n            <Logo />\n            <Register onSubmit={this.onSubmit} onSignIn={this.onSignIn}/>\n          </div>\n        )  \n      } else {\n        return(\n          <div className=\"flex flex-column\">\n            <Nav \n              signInState={this.state.isSignIn} \n              onSignOut={this.onSignOut}  \n              onRegister={this.onRegister} \n              isRegister={this.state.onRegister}\n            />\n            <Logo />\n            <SignIn onSubmit={this.onSubmit} />\n          </div>\n        )  \n      }\n    } else {\n      return(\n        <div className=\"flex flex-column\">\n          <Nav \n              signInState={this.state.isSignIn} \n              onSignOut={this.onSignOut}  \n              onRegister={this.onRegister} \n              isRegister={this.state.onRegister}\n            />\n          <Logo />\n          <div className=\"flex flex-column justify-center\">\n            <SearchBar onSending={this.onSending} onTyping={this.onTyping} searchField={this.state.searchField}/>\n            <ImageRecognized imageUrl={this.state.URL} answer={this.state.predictName} faceBox={this.state.faceBox}/>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n                                                                                     ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}